# Copyright 2018 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{/* Validation for a gameserver spec */}}
{{- define "gameserver.validation" }}
required:
- spec
properties:
  spec:
    required:
    - template
    properties:
      template:
        type: object
        required:
        - spec
        properties:
          spec:
            type: object
            required:
            - containers
            properties:
              containers:
                type: array
                minItems: 1
                items:
                  type: object
                  required:
                  - image
                  properties:
                    name:
                      type: string
                      minLength: 0
                      maxLength: 63
                      pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    image:
                      type: string
                      minLength: 1
      container:
        title: The container name running the gameserver
        description: if there is more than one container, specify which one is the game server
        type: string
        minLength: 0
        maxLength: 63
        pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
      ports:
        title: array of ports to expose on the game server container
        type: array
        minItems: 0 # make this 1 in 0.4.0
        required:
          - containerPort
        items:
          type: object
          properties:
            portPolicy:
              title: the port policy that will be applied to the game server
              description: |
                  portPolicy has two options:
                  - "dynamic" (default) the system allocates a free hostPort for the gameserver, for game clients to connect to
                  - "static", user defines the hostPort that the game client will connect to. Then onus is on the user to ensure that the
                  port is available. When static is the policy specified, `hostPort` is required to be populated
              type: string
              enum:
              - dynamic
              - static
            protocol:
              title: Protocol being used. Defaults to UDP. TCP is the only other option
              type: string
              enum:
              - UDP
              - TCP
            containerPort:
              title: The port that is being opened on the game server process
              type: integer
              minimum: 1
              maximum: 65535
            hostPort:
              title: The port exposed on the host
              description: Only required when `portPolicy` is "static". Overwritten when portPolicy is "dynamic".
              type: integer
              minimum: 1
              maximum: 65535
      portPolicy: # remove this in 0.4.0
        title: the port policy that will be applied to the game server
        description: |
            portPolicy has two options:
            - "dynamic" (default) the system allocates a free hostPort for the gameserver, for game clients to connect to
            - "static", user defines the hostPort that the game client will connect to. Then onus is on the user to ensure that the
            port is available. When static is the policy specified, `hostPort` is required to be populated
        type: string
        enum:
        - dynamic
        - static
      protocol: # remove this in 0.4.0
        title: Protocol being used. Defaults to UDP. TCP is the only other option
        type: string
        enum:
        - UDP
        - TCP
      containerPort: # remove this in 0.4.0
        title: The port that is being opened on the game server process
        type: integer
        minimum: 1
        maximum: 65535
      hostPort: # remove this in 0.4.0
        title: The port exposed on the host
        description: Only required when `portPolicy` is "static". Overwritten when portPolicy is "dynamic".
        type: integer
        minimum: 1
        maximum: 65535
      health:
        type: object
        title: Health checking for the running game server
        properties:
          disabled:
            title: Disable health checking. defaults to false, but can be set to true
            type: boolean
          initialDelaySeconds:
            title: Number of seconds after the container has started before health check is initiated. Defaults to 5 seconds
            type: integer
            minimum: 0
            maximum: 2147483648
          periodSeconds:
            title: How long before the server is considered not healthy
            type: integer
            minimum: 0
            maximum: 2147483648
          failureThreshold:
            title: Minimum consecutive failures for the health probe to be considered failed after having succeeded.
            type: integer
            minimum: 1
            maximum: 2147483648
{{- end }}