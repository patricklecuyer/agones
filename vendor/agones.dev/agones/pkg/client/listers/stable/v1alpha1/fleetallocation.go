// Copyright 2018 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was autogenerated. Do not edit directly.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "agones.dev/agones/pkg/apis/stable/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FleetAllocationLister helps list FleetAllocations.
type FleetAllocationLister interface {
	// List lists all FleetAllocations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FleetAllocation, err error)
	// FleetAllocations returns an object that can list and get FleetAllocations.
	FleetAllocations(namespace string) FleetAllocationNamespaceLister
	FleetAllocationListerExpansion
}

// fleetAllocationLister implements the FleetAllocationLister interface.
type fleetAllocationLister struct {
	indexer cache.Indexer
}

// NewFleetAllocationLister returns a new FleetAllocationLister.
func NewFleetAllocationLister(indexer cache.Indexer) FleetAllocationLister {
	return &fleetAllocationLister{indexer: indexer}
}

// List lists all FleetAllocations in the indexer.
func (s *fleetAllocationLister) List(selector labels.Selector) (ret []*v1alpha1.FleetAllocation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FleetAllocation))
	})
	return ret, err
}

// FleetAllocations returns an object that can list and get FleetAllocations.
func (s *fleetAllocationLister) FleetAllocations(namespace string) FleetAllocationNamespaceLister {
	return fleetAllocationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FleetAllocationNamespaceLister helps list and get FleetAllocations.
type FleetAllocationNamespaceLister interface {
	// List lists all FleetAllocations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FleetAllocation, err error)
	// Get retrieves the FleetAllocation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FleetAllocation, error)
	FleetAllocationNamespaceListerExpansion
}

// fleetAllocationNamespaceLister implements the FleetAllocationNamespaceLister
// interface.
type fleetAllocationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FleetAllocations in the indexer for a given namespace.
func (s fleetAllocationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FleetAllocation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FleetAllocation))
	})
	return ret, err
}

// Get retrieves the FleetAllocation from the indexer for a given namespace and name.
func (s fleetAllocationNamespaceLister) Get(name string) (*v1alpha1.FleetAllocation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fleetallocation"), name)
	}
	return obj.(*v1alpha1.FleetAllocation), nil
}
